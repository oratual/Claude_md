#!/bin/bash
# Batman Guide - Muestra a Claude c√≥mo usar Batman correctamente

# Colores
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${BLUE}ü¶á BATMAN INCORPORATED - Gu√≠a de Uso Completo${NC}\n"

# Verificar si es Claude quien ejecuta
if [ "$1" == "--for-claude" ]; then
    echo -e "${RED}‚ö†Ô∏è  ATENCI√ìN CLAUDE: ESTA ES LA FORMA CORRECTA DE USAR BATMAN${NC}\n"
fi

echo -e "${YELLOW}üìã COMPONENTES PRINCIPALES:${NC}"
echo -e "  ${CYAN}./batman${NC} - Ejecuci√≥n est√°ndar (una instancia)"
echo -e "  ${CYAN}./batman-parallel${NC} - RECOMENDADO para m√∫ltiples proyectos"
echo -e "  ${CYAN}./batman-isolated${NC} - M√°ximo aislamiento (sandbox)"
echo -e "  ${CYAN}./batman-multi${NC} - Control manual de instancias"
echo ""

echo -e "${YELLOW}üö® REGLAS CR√çTICAS:${NC}"
echo -e "  ${RED}1.${NC} SIEMPRE usar ${GREEN}--real-agents${NC} para trabajo real"
echo -e "  ${RED}2.${NC} SIEMPRE especificar ${GREEN}--mode${NC} [safe|fast|infinity|redundant]"
echo -e "  ${RED}3.${NC} SIEMPRE incluir ${GREEN}--context${NC} con la ruta del proyecto"
echo -e "  ${RED}4.${NC} USAR ${GREEN}--module software${NC} para tareas Windows/compilaci√≥n"
echo ""

echo -e "${YELLOW}‚úÖ EJEMPLOS CORRECTOS:${NC}"
echo ""

echo -e "${GREEN}1. Compilar para Windows:${NC}"
cat << 'EOF'
cd ~/glados/batman-incorporated && ./batman-parallel build \
  "compilar DiskDominator para Windows usando m√≥dulo software" \
  --real-agents \
  --mode fast \
  --context "/home/lauta/glados/DiskDominator" \
  --module software
EOF
echo ""

echo -e "${GREEN}2. Desarrollo de Features:${NC}"
cat << 'EOF'
cd ~/glados/batman-incorporated && ./batman-parallel dev \
  "implementar sistema de autenticaci√≥n con JWT" \
  --real-agents \
  --mode safe \
  --context "$(pwd)" \
  --verbose
EOF
echo ""

echo -e "${GREEN}3. Testing Multiplataforma:${NC}"
cat << 'EOF'
cd ~/glados/batman-incorporated && ./batman-parallel test \
  "ejecutar suite completa de tests en Linux y Windows" \
  --real-agents \
  --mode safe \
  --context "$(pwd)" \
  --module software
EOF
echo ""

echo -e "${GREEN}4. Tareas Largas/Complejas:${NC}"
cat << 'EOF'
cd ~/glados/batman-incorporated && ./batman \
  "refactorizar arquitectura completa a microservicios" \
  --real-agents \
  --mode infinity \
  --agents 5 \
  --context "$(pwd)" \
  --timeout 7200
EOF
echo ""

echo -e "${YELLOW}üîß FLAGS DISPONIBLES:${NC}"
echo -e "  ${CYAN}--real-agents${NC}     : Ejecutar con agentes reales (OBLIGATORIO)"
echo -e "  ${CYAN}--mode${NC}           : safe|fast|infinity|redundant"
echo -e "  ${CYAN}--context${NC}        : Ruta del proyecto"
echo -e "  ${CYAN}--module${NC}         : Cargar m√≥dulo (software, books, etc)"
echo -e "  ${CYAN}--agents N${NC}       : N√∫mero de agentes (infinity mode)"
echo -e "  ${CYAN}--timeout N${NC}      : Timeout en segundos"
echo -e "  ${CYAN}--verbose${NC}        : Salida detallada"
echo -e "  ${CYAN}--dry-run${NC}        : Ver plan sin ejecutar"
echo -e "  ${CYAN}--no-monitor${NC}     : Sin monitor web"
echo ""

echo -e "${YELLOW}üì¶ M√ìDULOS DISPONIBLES:${NC}"
echo -e "  ${CYAN}software${NC}: Windows interop, compilaci√≥n, Office, deployment"
echo -e "  ${CYAN}books${NC}:    Escritura y publicaci√≥n (pr√≥ximamente)"
echo -e "  ${CYAN}data${NC}:     An√°lisis de datos (pr√≥ximamente)"
echo ""

echo -e "${YELLOW}üéØ MODOS DE EJECUCI√ìN:${NC}"
echo -e "  ${CYAN}safe${NC}:      Git worktrees, aislamiento completo (DEFAULT)"
echo -e "  ${CYAN}fast${NC}:      Directo en main, para cambios r√°pidos"
echo -e "  ${CYAN}infinity${NC}:  Paralelizaci√≥n m√°xima, tareas largas"
echo -e "  ${CYAN}redundant${NC}: M√∫ltiples agentes verifican el trabajo"
echo ""

echo -e "${RED}‚ùå ERRORES COMUNES:${NC}"
echo -e "  ‚Ä¢ Olvidar ${GREEN}--real-agents${NC}"
echo -e "  ‚Ä¢ No especificar ${GREEN}--context${NC}"
echo -e "  ‚Ä¢ Usar modo incorrecto"
echo -e "  ‚Ä¢ No usar ${GREEN}batman-parallel${NC} para m√∫ltiples instancias"
echo ""

echo -e "${BLUE}üí° PLANTILLA RECOMENDADA:${NC}"
cat << 'EOF'
cd ~/glados/batman-incorporated && ./batman-parallel [proyecto] \
  "[descripci√≥n detallada]" \
  --real-agents \
  --mode [safe|fast|infinity|redundant] \
  --context "[ruta]" \
  --module [software|none]
EOF
echo ""

# Si se pasa --examples, mostrar m√°s ejemplos
if [ "$1" == "--examples" ] || [ "$2" == "--examples" ]; then
    echo -e "${YELLOW}üìö EJEMPLOS ADICIONALES:${NC}"
    echo ""
    
    echo -e "${GREEN}Generar Documentaci√≥n:${NC}"
    cat << 'EOF'
./batman-parallel docs \
  "generar documentaci√≥n completa con diagramas" \
  --real-agents --mode fast --context "$(pwd)"
EOF
    echo ""
    
    echo -e "${GREEN}Deploy a Producci√≥n:${NC}"
    cat << 'EOF'
./batman-parallel deploy \
  "deploy a IIS con SSL y backup autom√°tico" \
  --real-agents --mode safe --context "$(pwd)" --module software
EOF
    echo ""
    
    echo -e "${GREEN}Optimizaci√≥n de Performance:${NC}"
    cat << 'EOF'
./batman "analizar y optimizar performance del sistema" \
  --real-agents --mode redundant --context "$(pwd)"
EOF
    echo ""
fi

echo -e "${CYAN}Para m√°s ejemplos: ${NC}./batman-guide --examples"
echo -e "${CYAN}Para Claude: ${NC}./batman-guide --for-claude"
echo -e "${CYAN}Documentaci√≥n completa: ${NC}cat CLAUDE_USAGE_GUIDE.md"